services:
  api:
    build: api
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - ./api:/code
    depends_on:
      apm-server:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - .env   

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: db    
    expose:
      - "5432:5432"  
    env_file:
      - .env      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 10

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: elastic    
    environment:
      - discovery.type=single-node
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.8.0
    container_name: apm-server    
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
      - kibana

volumes:
  postgres_data:     
